<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.my.feedback.dao.GoodsMapper">
    <resultMap id="BaseResultMap" type="com.my.feedback.model.Goods">
        <!--
        @mbggenerated
        -->
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
        <result column="goods_no" jdbcType="VARCHAR" property="goodsNo" />
        <result column="unit" jdbcType="VARCHAR" property="unit" />
        <result column="price" jdbcType="DECIMAL" property="price" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="create_name" jdbcType="VARCHAR" property="createName" />
        <result column="state" jdbcType="INTEGER" property="state" />
    </resultMap>
    <sql id="Base_Column_List">
        <!--
        @mbggenerated
        -->
        id, goods_name, goods_no, unit, price, remark, create_time, create_name, state
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--
        @mbggenerated
        -->
        select 
        <include refid="Base_Column_List" />
        from goods
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
        @mbggenerated
        -->
        delete from goods
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.my.feedback.model.Goods">
        <!--
        @mbggenerated
        -->
        insert into goods (id, goods_name, goods_no, 
            unit, price, remark, 
            create_time, create_name, state
            )
        values (#{id,jdbcType=INTEGER}, #{goodsName,jdbcType=VARCHAR}, #{goodsNo,jdbcType=VARCHAR}, 
            #{unit,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR}, 
            #{createTime,jdbcType=TIMESTAMP}, #{createName,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}
            )
    </insert>
    <insert id="insertSelective" parameterType="com.my.feedback.model.Goods">
        <!--
        @mbggenerated
        -->
        insert into goods
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="goodsName != null">
                goods_name,
            </if>
            <if test="goodsNo != null">
                goods_no,
            </if>
            <if test="unit != null">
                unit,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="createName != null">
                create_name,
            </if>
            <if test="state != null">
                state,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="goodsName != null">
                #{goodsName,jdbcType=VARCHAR},
            </if>
            <if test="goodsNo != null">
                #{goodsNo,jdbcType=VARCHAR},
            </if>
            <if test="unit != null">
                #{unit,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=DECIMAL},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createName != null">
                #{createName,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.my.feedback.model.Goods">
        <!--
        @mbggenerated
        -->
        update goods
        <set>
            <if test="goodsName != null">
                goods_name = #{goodsName,jdbcType=VARCHAR},
            </if>
            <if test="goodsNo != null">
                goods_no = #{goodsNo,jdbcType=VARCHAR},
            </if>
            <if test="unit != null">
                unit = #{unit,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createName != null">
                create_name = #{createName,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.my.feedback.model.Goods">
        <!--
        @mbggenerated
        -->
        update goods
        set goods_name = #{goodsName,jdbcType=VARCHAR},
            goods_no = #{goodsNo,jdbcType=VARCHAR},
            unit = #{unit,jdbcType=VARCHAR},
            price = #{price,jdbcType=DECIMAL},
            remark = #{remark,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            create_name = #{createName,jdbcType=VARCHAR},
            state = #{state,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="listByVo" parameterType="com.my.feedback.model.Goods" resultMap="BaseResultMap">
        select * from goods
        <where>
            <if test="goodsName != null">
                goods_name LIKE CONCAT(CONCAT('%', #{goodsName}), '%')
            </if>
        </where>
    </select>
    <select id="getGoodsByNo" resultMap="BaseResultMap">
        select * from goods where goods_no=#{goodsNo}
    </select>
</mapper>