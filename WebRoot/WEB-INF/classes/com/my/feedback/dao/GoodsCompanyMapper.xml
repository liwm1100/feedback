<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.my.feedback.dao.GoodsCompanyMapper">
    <resultMap id="BaseResultMap" type="com.my.feedback.model.GoodsCompany">
        <!--
        @mbggenerated
        -->
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="code" jdbcType="VARCHAR" property="code" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="user" jdbcType="VARCHAR" property="user" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="state" jdbcType="INTEGER" property="state" />
    </resultMap>
    <sql id="Base_Column_List">
        <!--
        @mbggenerated
        -->
        id, code, name, user, remark, state
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--
        @mbggenerated
        -->
        select 
        <include refid="Base_Column_List" />
        from goods_company
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
        @mbggenerated
        -->
        delete from goods_company
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.my.feedback.model.GoodsCompany">
        <!--
        @mbggenerated
        -->
        insert into goods_company (id, code, name, 
            user, remark, state
            )
        values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
            #{user,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}
            )
    </insert>
    <insert id="insertSelective" parameterType="com.my.feedback.model.GoodsCompany">
        <!--
        @mbggenerated
        -->
        insert into goods_company
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="code != null">
                code,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="user != null">
                user,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="state != null">
                state,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="user != null">
                #{user,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.my.feedback.model.GoodsCompany">
        <!--
        @mbggenerated
        -->
        update goods_company
        <set>
            <if test="code != null">
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="user != null">
                user = #{user,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.my.feedback.model.GoodsCompany">
        <!--
        @mbggenerated
        -->
        update goods_company
        set code = #{code,jdbcType=VARCHAR},
            name = #{name,jdbcType=VARCHAR},
            user = #{user,jdbcType=VARCHAR},
            remark = #{remark,jdbcType=VARCHAR},
            state = #{state,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="listByVo" parameterType="com.my.feedback.model.GoodsCompany" resultMap="BaseResultMap">
        select * from goods_company
        <where>
            <if test="name">
                name LIKE CONCAT(CONCAT('%', #{name}), '%')
            </if>
        </where>
    </select>
</mapper>